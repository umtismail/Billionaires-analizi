#verileri çekiyoruz
#billionaire_data <- read.csv("C:/Users/Eugeo/Desktop/analiz final/Billionaires.csv")
#na değerlerini siliyoruz
#billionaire_data <- na.exclude(billionaire_data)
billionaire_sample <- read.delim("C:/Users/Eugeo/Desktop/analiz final/sample.txt")
#burda rastgele 1000 örneklem çekiyoruz
#billionaire_sample<-billionaire_data[sample(1:nrow(billionaire_data), 1000), ]
#burda çektiğimiz örneklem txt dosyasına kaydediyoruz
#write.table(billionaire_sample,file = "sample.txt",sep="\t")
## Serveti farklı sektörlere göre analiz
sektore_gore_zenginligi <- billionaire_sample %>%
group_by(industries) %>%
summarise(toplam_zenginlik = sum(finalWorth)) %>%
arrange(desc(toplam_zenginlik))
# Serveti farklı ülkelere göre analiz
ulkelere_gore_zenginligi <- billionaire_sample %>%
group_by(region) %>%
summarise(toplam_zenginlik = sum(finalWorth)) %>%
arrange(desc(toplam_zenginlik))
# Serveti farklı bölgelere göre analiz
bolgesel_zenginligi <- billionaire_sample %>%
group_by(residenceStateRegion) %>%
summarise(toplam_zenginlik = sum(finalWorth)) %>%
arrange(desc(toplam_zenginlik))
#burda amerikalı olmayan kişilerin bölgeleri olmadığından siliyorum
bolgesel_zenginligi <- bolgesel_zenginligi[bolgesel_zenginligi$residenceStateRegion != "", ]
# Serveti farklı sektörlere göre görselleştirmek
ggplot(sektore_gore_zenginligi, aes(x = "", y = toplam_zenginlik, fill = industries)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_void() +
ggtitle("Servetin Sektörlere Göre Dağılımı")
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = region, y = toplam_zenginlik)) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
#servetin farklı bölgeler göre görseleştirme
ggplot(bolgesel_zenginligi, aes(x =residenceStateRegion, y = toplam_zenginlik)) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin bölgeler Göre Dağılımı")
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = region, y = toplam_zenginlik)) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
#servetin farklı bölgeler göre görseleştirme
ggplot(bolgesel_zenginligi, aes(x =residenceStateRegion, y = toplam_zenginlik)) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin bölgeler Göre Dağılımı")
#servetin farklı bölgeler göre görseleştirme
ggplot(bolgesel_zenginligi, aes(x =residenceStateRegion, y = log(toplam_zenginlik))) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin bölgeler Göre Dağılımı")
# Serveti farklı bölgelere göre görselleştirmek için
mapdata<-map_data("world")
mapdata<-left_join(mapdata,ulkelere_gore_zenginligi)
mapdata1 <- mapdata %>%
filter(!is.na(toplam_zenginlik)) %>%
mutate(toplam_zenginlik = toplam_zenginlik / 100)
map1<-ggplot(mapdata1,aes(x=long,y=lat,group=group))+geom_polygon(aes(fill=toplam_zenginlik),color="black")
map2<-map1 + scale_fill_gradient(name="Bin dolar",low="yellow",high = "red",na.value = "grey50")+theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
rect = element_blank())
map2
mapdata1 <- mapdata %>%
filter(!is.na(toplam_zenginlik)) %>%
mutate(toplam_zenginlik = log(toplam_zenginlik))
map1<-ggplot(mapdata1,aes(x=long,y=lat,group=group))+geom_polygon(aes(fill=toplam_zenginlik),color="black")
map2<-map1 + scale_fill_gradient(name="Bin dolar",low="yellow",high = "red",na.value = "grey50")+theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
rect = element_blank())
map2
ortalama_yas <- mean(billionaire_sample$age)
en_genc_yas <- min(billionaire_sample$age)
en_yaslı_yas <- max(billionaire_sample$age)
# Cinsiyet analizi
erkek_milyarder_sayisi <- sum(billionaire_sample$gender == "Male")
kadın_milyarder_sayisi <- sum(billionaire_sample$gender == "Female")
#ülkelere göre milyarder sayısı
# Ülkelerin bir listesini oluştur
countries <- unique(billionaire_sample$region )
milyarder<-c()
# Her ülkenin milyarder sayısını hesapla
for (region in countries) {
milyarder_sayisi <- sum(billionaire_sample$region  == region )
milyarder <- c(milyarder, milyarder_sayisi)
milyarder
}
ulkelere_gore_milyarder <- billionaire_sample %>%
group_by(region) %>%
count() %>%
rename(milyarder = n) %>%
arrange(desc(milyarder))
# yaş Demographics
yas_gurupları <- cut(billionaire_sample$age, breaks = seq(10, 100, 10))
yas_gurupları_sayısı <- table(yas_gurupları)
# Cinsiyet Demographics
cinsiyet_yüzdeleri <- prop.table(table(billionaire_sample$gender))*100
# Birthplace Demographics
dogum_yeri_yüzdeleri <- prop.table(table(billionaire_sample$ülke))
# Doğum yeri Results
cat("milyarderlerin ortalama yaşı:", ortalama_yas, "\n")
cat("En genç milyarder:", en_genc_yas, "yaşındad\n")
cat("En yaşlı milyarder:", en_yaslı_yas, "yasşında\n")
cat("\nCinsiyet dağılımı:\n")
print(cinsiyet_yüzdeleri)
#görseleştirme
barplot(cinsiyet_yüzdeleri,
xlab="Cinsiyet",
ylab="Yüzde",
main="milyarderlerin Cinsiyet Dağılımı")
cat("\nDoğum yeri dağılımı:\n")
print(ulkelere_gore_milyarder)
#görseleştirme
barplot(ulkelere_gore_milyarder$milyarder,
xlab="Ülkeler",
ylab="milyarder Sayısı",
main="milyarderlerin Ülke Dağılımı")
cat("\nYaş grubu dağılımı:\n")
print(yas_gurupları_sayısı)
#görseleştirme
barplot(yas_gurupları_sayısı,
xlab="Yaş Aralığı",
ylab="Say",
main="milyarderlerin Yaş Dağılımı")
# Kendi kendine milyarder olanlardan oluşan bir alt küme oluşturun
kendi_kendine_milyarder_olan <- billionaire_sample[billionaire_sample$selfMade == "TRUE", ]
# Kendi kendine milyarder olanların yüzdesini hesaplayın
kendi_kendine_milyarder_olanlarının_yüzdesi <- nrow(kendi_kendine_milyarder_olan) / nrow(billionaire_sample) *100
# Sonuçları yazdır
cat("Kendi kendine milyarder olanların yüzdesi: % ",  kendi_kendine_milyarder_olanlarının_yüzdesi)
#kenid sonradan milyarder olanalrın cinsiyet dağılımı
kendi_kendine_milyarder_olan_cinsiyeleri<-prop.table(table(kendi_kendine_milyarder_olan$gender))*100
kendi_kendine_milyarder_olan_cinsiyeleri
barplot(kendi_kendine_milyarder_olan_cinsiyeleri,
xlab="Cinsiyet",
ylab="Yüzde",
main="sonradan milyarder olanların Cinsiyet Dağılımı")
# Mirasile milyarder olanlardan oluşan bir alt küme oluşturun
miras_ile_milyarder_olan <- billionaire_sample[billionaire_sample$selfMade == "FALSE", ]
# miras ile milyarder olanların yüzdesini hesaplayın
miras_ile_milyarder_olan_yüzdesi <- nrow(miras_ile_milyarder_olan) / nrow(billionaire_sample) *100
cat("Serveti miras alan: % ", miras_ile_milyarder_olan_yüzdesi)
#miras yolu ile milyarder olanların cinsiyet dağılımı
miras_ile_milyarder_olan_cinsiyeleri<-prop.table(table(miras_ile_milyarder_olan$gender))*100
miras_ile_milyarder_olan_cinsiyeleri
barplot(miras_ile_milyarder_olan_cinsiyeleri,
xlab="Cinsiyet",
ylab="Yüzde",
main="miras alark milyarder olanların Cinsiyet Dağılımı")
barplot(c(miras_ile_milyarder_olan_yüzdesi,kendi_kendine_milyarder_olanlarının_yüzdesi),
xlab="miras alınarak milyarder olan / sonraden milyarder olan",
ylab="Yüzde",
main="milyarderlerin kendi kendine olmuşlar")
# finalWorth'u sayısala dönüştür
billionaire_sample$finalWorth <- as.numeric(gsub("[$,]", "", billionaire_sample$finalWorth))
billionaire_sample$gdp_country <- as.numeric(gsub("[$,]", "", billionaire_sample$gdp_country))
# Korelasyon katsayılarını hesaplayın
GSYİH_Korelasyonu <- cor(billionaire_sample$finalWorth, billionaire_sample$gdp_country)
TUFE_Korelasyonu <- cor(billionaire_sample$finalWorth, billionaire_sample$cpi_country)
Vergi_Orani_Korelasyonu <- cor(billionaire_sample$finalWorth, billionaire_sample$total_tax_rate_country)
# Korelasyon katsayılarını yazdır
cat("milyarder serveti ile GSYİH arasındaki ilişki:", GSYİH_Korelasyonu, "\n")
cat("milyarder serveti ile TÜFE değişimi arasındaki ilişki:", TUFE_Korelasyonu, "\n")
cat("milyarder serveti ile toplam vergi oranı arasındaki ilişki:", Vergi_Orani_Korelasyonu, "\n")
#gsyih görselleştirme
ggplot(billionaire_sample, aes(x = gdp_country, y = finalWorth)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(
title = "milyarder Sayısı ve GSYİH",
x = "GSYİH (USD)",
y = "milyarder toplma kazancı"
)
#toplam verig görselleştrime
ggplot(billionaire_sample, aes(x = total_tax_rate_country, y = finalWorth)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(
title = "milyarder Sayısı ve Toplam Vergi Oranı",
x = "toplam vergi oranı",
y = "milyarder toplma kazancı"
)
#gsyih görselleştirme
ggplot(billionaire_sample, aes(x = gdp_country, y = log(finalWorth))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(
title = "milyarder Sayısı ve GSYİH",
x = "GSYİH (USD)",
y = "milyarder toplma kazancı"
)
#toplam verig görselleştrime
ggplot(billionaire_sample, aes(x = total_tax_rate_country, y = log(finalWorth))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(
title = "milyarder Sayısı ve Toplam Vergi Oranı",
x = "toplam vergi oranı",
y = "milyarder toplma kazancı"
)
#tüfe görselleştirme
ggplot(billionaire_sample, aes(x = cpi_country, y = log(finalWorth))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(
title = "milyarder Sayısı ve TÜFE",
x = "TÜFE",
y = "milyarder toplma kazancı"
)
yila_gore_guruplar <- aggregate(billionaire_sample, by = list(year = yas_gurupları), FUN = length)
# milyarderlerin zaman içindeki sayısının grafiğini çizin
ggplot(yila_gore_guruplar, aes(x =year, y = log(finalWorth))) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin yaşa Göre Dağılımı")
a <- billionaire_sample %>%
group_by(industries)
library(leaflet)
library(ggplot2)
library(tidyverse)
#verileri çekiyoruz
#billionaire_data <- read.csv("C:/Users/Eugeo/Desktop/analiz final/Billionaires.csv")
#na değerlerini siliyoruz
#billionaire_data <- na.exclude(billionaire_data)
billionaire_sample <- read.delim("C:/Users/Eugeo/Desktop/analiz final/sample.txt")
#burda rastgele 1000 örneklem çekiyoruz
#billionaire_sample<-billionaire_data[sample(1:nrow(billionaire_data), 1000), ]
#burda çektiğimiz örneklem txt dosyasına kaydediyoruz
#write.table(billionaire_sample,file = "sample.txt",sep="\t")
## Serveti farklı sektörlere göre analiz
sektore_gore_zenginligi <- billionaire_sample %>%
group_by(industries) %>%
summarise(toplam_zenginlik = sum(finalWorth)) %>%
arrange(desc(toplam_zenginlik))
a <- billionaire_sample %>%
group_by(industries)
View(a)
View(a)
a <- billionaire_sample %>%
group_by(industries)%>%
count(industries)
View(a)
anova(toplam_zenginlik ~ industries, data = billionaire_sample)
View(billionaire_sample)
anova(toplam_zenginlik ~ industries, data = sektore_gore_zenginligi)
anova(toplam_zenginlik ~ industries, data = sektore_gore_zenginlik)
anova(toplam_zenginlik ~ industries, data = billionaire_sample)
anova(log(toplam_zenginlik) ~ industries, data = billionaire_sample)
aov(log(toplam_zenginlik) ~ industries, data = billionaire_sample)
aov(toplam_zenginlik ~ industries, data = sektore_gore_zenginligi)
aov(log(toplam_zenginlik) ~ industries, data = sektore_gore_zenginligi)
anova(log(toplam_zenginlik) ~ industries, data = sektore_gore_zenginligi)
anova(toplam_zenginlik ~ industries, data = sektore_gore_zenginligi)
aov(toplam_zenginlik ~ industries, data = sektore_gore_zenginligi)
aov(toplam_zenginlik ~ region, data = sektore_gore_zenginligi)
anova(toplam_zenginlik ~ region, data = sektore_gore_zenginligi)
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = region, y = toplam_zenginlik)) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
library(ggplot2)
# Serveti farklı sektörlere göre görselleştirmek
ggplot(sektore_gore_zenginligi, aes(x = "", y = toplam_zenginlik, fill = industries)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_void() +
ggtitle("Servetin Sektörlere Göre Dağılımı")
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = region, y = toplam_zenginlik)) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = region, y = toplam_zenginlik)) +
geom_bar(stat = "identity") +
theme_void() +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = region, y = toplam_zenginlik)) +
geom_bar(stat = "identity") +
cale_fill_manual(values = c("red", "green", "blue")) +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = region, y = toplam_zenginlik)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "green", "blue")) +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = "", y = toplam_zenginlik,fill=region)) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = "", y = toplam_zenginlik,fill=region)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = "", y = toplam_zenginlik,fill=region)) +
geom_bar(stat = "identity") +
theme_void() +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = "", y = toplam_zenginlik,fill=region)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = "", y = toplam_zenginlik,fill=region)) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = region, y = toplam_zenginlik, fill = region)) +
geom_bar(stat = "identity") +
labs(title = "Zenginliğin Ülkelere Göre Dağılımı",
x = "Bölge",
y = "Toplam Zenginlik (milyar dolar)") +
scale_fill_brewer(palette = "Set1") +
theme_minimal()
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = "", y = log(toplam_zenginlik), fill = region)) +
geom_bar(stat = "identity") +
labs(title = "Zenginliğin Ülkelere Göre Dağılımı",
x = "Bölge",
y = "Toplam Zenginlik (milyar dolar)") +
scale_fill_brewer(palette = "Set1") +
theme_minimal()
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = region, y = toplam_zenginlik,fill=region)) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = region, y = log(toplam_zenginlik),fill=region)) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
#servetin farklı bölgeler göre görseleştirme
ggplot(bolgesel_zenginligi, aes(x =residenceStateRegion, y = log(toplam_zenginlik))) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin bölgeler Göre Dağılımı")
#servetin farklı bölgeler göre görseleştirme
ggplot(bolgesel_zenginligi, aes(x =residenceStateRegion, y = log(toplam_zenginlik))) +
geom_bar(stat = "identity") +
theme_minimal(border = element_rect(color = "black", fill = NA))+
ggtitle("Zenginliğin bölgeler Göre Dağılımı")
#servetin farklı bölgeler göre görseleştirme
ggplot(bolgesel_zenginligi, aes(x =residenceStateRegion, y = log(toplam_zenginlik))) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "green", "blue","yellow","purple")) +
ggtitle("Zenginliğin bölgeler Göre Dağılımı")
#servetin farklı bölgeler göre görseleştirme
ggplot(bolgesel_zenginligi, aes(x =residenceStateRegion, y = log(toplam_zenginlik))) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "green", "blue","yellow","purple")) +
ggtitle("Zenginliğin bölgeler Göre Dağılımı")
#servetin farklı bölgeler göre görseleştirme
ggplot(bolgesel_zenginligi, aes(x =residenceStateRegion, y = log(toplam_zenginlik),fill=residenceStateRegion)) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin bölgeler Göre Dağılımı")
#görseleştirme
barplot(cinsiyet_yüzdeleri,
col=c("green", "red"),
xlab="Cinsiyet",
ylab="Yüzde",
main="milyarderlerin Cinsiyet Dağılımı")
#görseleştirme
barplot(ulkelere_gore_milyarder$milyarder,
col=c()
xlab="Ülkeler",
#görseleştirme
barplot(ulkelere_gore_milyarder$milyarder,
col=c("blue","yellow")
xlab="Ülkeler",
#görseleştirme
barplot(ulkelere_gore_milyarder$milyarder,
col=c("blue","yellow"),
xlab="Ülkeler",
ylab="milyarder Sayısı",
main="milyarderlerin Ülke Dağılımı")
#görseleştirme
ggplot(ulkelere_gore_milyarder, aes(x = "", y = log(milyarder),fill=region)) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
#görseleştirme
ggplot(ulkelere_gore_milyarder, aes(x = "", y = log(milyarder),fill=region)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
barplot(ulkelere_gore_milyarder$,
barplot(ulkelere_gore_milyarder$milyarder
xlab="Ülkeler",
barplot(ulkelere_gore_milyarder$milyarder,
xlab="Ülkeler",
ylab="milyarder Sayısı",
main="milyarderlerin Ülke Dağılımı")
#görseleştirme
ggplot(ulkelere_gore_milyarder, aes(x = "", y = milyarder,fill=region)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") +
theme_void() +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
#görseleştirme
ggplot(ulkelere_gore_milyarder, aes(x = region, y = milyarder,fill=region)) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
#görseleştirme
barplot(yas_gurupları_sayısı,
xlab="Yaş Aralığı",
ylab="Say",
main="milyarderlerin Yaş Dağılımı")
#görseleştirme
ggplot(yas_gurupları_sayısı +
yas_gurupları_sayısı
yas_gurupları_sayısı
yas_gurupları_sayısı
yas_gurupları_sayısı
#görseleştirme
barplot(yas_gurupları_sayısı,
col = c("green","red","blue","yellow","purple","brown","pink","turquoise","orange"),
xlab="Yaş Aralığı",
ylab="Say",
main="milyarderlerin Yaş Dağılımı")
barplot(kendi_kendine_milyarder_olan_cinsiyeleri,
xlab="Cinsiyet",
ylab="Yüzde",
main="sonradan milyarder olanların Cinsiyet Dağılımı")
barplot(kendi_kendine_milyarder_olan_cinsiyeleri,
col = c("red","blue"),
xlab="Cinsiyet",
ylab="Yüzde",
main="sonradan milyarder olanların Cinsiyet Dağılımı")
barplot(miras_ile_milyarder_olan_cinsiyeleri,
col = c("pink","blue"),
xlab="Cinsiyet",
ylab="Yüzde",
main="miras alark milyarder olanların Cinsiyet Dağılımı")
barplot(c(miras_ile_milyarder_olan_yüzdesi,kendi_kendine_milyarder_olanlarının_yüzdesi),
xlab="miras alınarak milyarder olan / sonraden milyarder olan",
ylab="Yüzde",
main="milyarderlerin kendi kendine olmuşlar")
barplot(c(miras_ile_milyarder_olan_yüzdesi,kendi_kendine_milyarder_olanlarının_yüzdesi),
col = c("green","red")
xlab="miras alınarak milyarder olan / sonraden milyarder olan",
barplot(c(miras_ile_milyarder_olan_yüzdesi,kendi_kendine_milyarder_olanlarının_yüzdesi),
col = c("green","red"),
xlab="miras alınarak milyarder olan / sonraden milyarder olan",
ylab="Yüzde",
main="milyarderlerin kendi kendine olmuşlar")
#gsyih görselleştirme
ggplot(billionaire_sample, aes(x = gdp_country, y = log(finalWorth))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(
title = "milyarder Sayısı ve GSYİH",
x = "GSYİH (USD)",
y = "milyarder toplma kazancı"
)
#toplam verig görselleştrime
ggplot(billionaire_sample, aes(x = total_tax_rate_country, y = log(finalWorth))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(
title = "milyarder Sayısı ve Toplam Vergi Oranı",
x = "toplam vergi oranı",
y = "milyarder toplma kazancı"
)
#tüfe görselleştirme
ggplot(billionaire_sample, aes(x = cpi_country, y = log(finalWorth))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(
title = "milyarder Sayısı ve TÜFE",
x = "TÜFE",
y = "milyarder toplma kazancı"
)
# milyarderlerin zaman içindeki sayısının grafiğini çizin
ggplot(yila_gore_guruplar, aes(x =year, y = log(finalWorth))) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin yaşa Göre Dağılımı")
# milyarderlerin zaman içindeki sayısının grafiğini çizin
ggplot(yila_gore_guruplar, aes(x =year, y = log(finalWorth),fill=year)) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin yaşa Göre Dağılımı")
aov_sonuclari <- aov(toplam_zenginlik ~ industries, data = sektore_gore_zenginlik)
aov_sonuclari <- aov(toplam_zenginlik ~ industries, data = sektore_gore_zenginligi)
summary(aov_sonuclari)
# Serveti farklı ülkelere göre görselleştirmek
ggplot(ulkelere_gore_zenginligi, aes(x = region, y = log(toplam_zenginlik),fill=region)) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin Ülkelere Göre Dağılımı")
#servetin farklı bölgeler göre görseleştirme
ggplot(bolgesel_zenginligi, aes(x =residenceStateRegion, y = log(toplam_zenginlik),fill=residenceStateRegion)) +
geom_bar(stat = "identity") +
ggtitle("Zenginliğin bölgeler Göre Dağılımı")
#görseleştirme
ggplot(ulkelere_gore_milyarder, aes(x = region, y = milyarder,fill=region)) +
geom_bar(stat = "identity") +
ggtitle("milyarderlerin Ülke Dağılımı")
View(mapdata)
View(mapdata1)
View(mapdata1)
View(mapdata)
View(mapdata)
View(billionaire_sample)
View(aov_sonuclari)
load("C:/Users/İSO/Desktop/üni ders/dönem ödevleri/analiz/analiz final/.RData")
